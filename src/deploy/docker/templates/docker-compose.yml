version: '3.1'
services:
  application:
    container_name: ${_Values_root_name}-application
    image: ${_Values_image_repository}${_Values_image_native}:${_Values_image_tag}
    environment:
      - TZ=Europe/Berlin
      - spring.datasource.url=jdbc:postgresql://${_Values_root_name}-postgres:5432/customer
      - spring.datasource.username=example-batch
      - spring.datasource.password=example-batch
      - spring.batch.scheduler.enabled=true
    command: ["-Xmx${_Values_resources_requests_memory}"]
    
    depends_on:
      postgres:
        condition: service_healthy
        
  postgres:
    container_name: ${_Values_root_name}-postgres
    image: postgres:14.5
    restart: 'no'
    ports:
      - 50820:5432
    environment:
      - TZ=Europe/Berlin
      - POSTGRES_USER=example-batch
      - POSTGRES_PASSWORD=example-batch
      - POSTGRES_DB=customer
    command: postgres -c 'shared_buffers=64MB' -c 'max_connections=30' -c 'shared_preload_libraries=pg_stat_statements'
    healthcheck:
        test: "sh -c pg_isready"
        interval: 10s
        timeout: 5s
        retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  tmp:
  applogs:
  pgdata: